/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DraftPasteProcessor
 * @typechecks
 * @flow
 */

'use strict';

const CharacterMetadata = require('./CharacterMetadata');
const ContentBlock = require('./ContentBlock');
const Immutable = require('immutable');

const convertFromHTMLtoContentBlocks = require('./convertFromHTMLToContentBlocks');
const generateRandomKey = require('./generateRandomKey');
const getSafeBodyFromHTML = require('./getSafeBodyFromHTML');
const sanitizeDraftText = require('./sanitizeDraftText');

import type { DraftBlockRenderMap } from './DraftBlockRenderMap';
import type { EntityMap } from './EntityMap';

const {
  List,
  Repeat
} = Immutable;

const DraftPasteProcessor = {
  processHTML(html: string, blockRenderMap?: DraftBlockRenderMap): ?{ contentBlocks: ?Array<ContentBlock>; entityMap: EntityMap; } {
    return convertFromHTMLtoContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);
  },

  processText(textBlocks: Array<string>, character: CharacterMetadata): Array<ContentBlock> {
    return textBlocks.map(textLine => {
      textLine = sanitizeDraftText(textLine);
      return new ContentBlock({
        key: generateRandomKey(),
        type: 'unstyled',
        text: textLine,
        characterList: List(Repeat(character, textLine.length))
      });
    });
  }
};

module.exports = DraftPasteProcessor;